{
	"info": {
		"_postman_id": "8bb37602-7263-403c-b22c-ee883dea827a",
		"name": "WebsiteTheSSEquelTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31102735"
	},
	"item": [
		{
			"name": "/api/user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for GET /api/user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql([\r",
							"        {\r",
							"            \"id\": 1,\r",
							"            \"name\": \"John Doe\",\r",
							"            \"email\": \"johndoe@rit.edu\"\r",
							"        },\r",
							"        {\r",
							"            \"id\": 2,\r",
							"            \"name\": \"Jane Doe\",\r",
							"            \"email\": \"janedoe@rit.edu\"\r",
							"        },\r",
							"        {\r",
							"            \"id\": 3,\r",
							"            \"name\": \"John Smith\",\r",
							"            \"email\": \"johnsmith@rit.edu\"\r",
							"        }\r",
							"    ]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/user",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"user"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/user/[id]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for GET /api/user/[id]\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql({\r",
							"            \"name\": \"John Doe\",\r",
							"            \"email\": \"johndoe@rit.edu\"\r",
							"        });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/user/1",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"user",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for PUT /api/user\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.equal(\"Johnathaniel\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "next-auth.session-token=123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"Johnathaniel\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/user/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/user no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for PUT /api/user without auth\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(403);\r",
							"    pm.expect(pm.response.text()).to.equal(\"Access Denied; need to be Officer to access\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"Johnathaniel\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/user/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"user",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/schedule",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for GET /api/schedule\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    // delete data we don't want to verify\r",
							"    jsonData.forEach((obj) => {\r",
							"        delete obj[\"mentor\"];\r",
							"        delete obj[\"hourBlock\"];\r",
							"    });\r",
							"    pm.expect(jsonData).to.eql([\r",
							"        {\r",
							"            \"id\": 1,\r",
							"            \"mentorId\": 1,\r",
							"            \"hourBlockId\": 1\r",
							"        },\r",
							"        {\r",
							"            \"id\": 2,\r",
							"            \"mentorId\": 2,\r",
							"            \"hourBlockId\": 2\r",
							"        },\r",
							"        {\r",
							"            \"id\": 3,\r",
							"            \"mentorId\": 3,\r",
							"            \"hourBlockId\": 3\r",
							"        }\r",
							"    ]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/schedule",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"schedule"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/schedule/[id]",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for GET /api/schedule/[id]\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    delete jsonData[\"mentor\"];\r",
							"    delete jsonData[\"hourBlock\"];\r",
							"    pm.expect(jsonData).to.eql({\r",
							"        \"id\": 1,\r",
							"        \"mentorId\": 1,\r",
							"        \"hourBlockId\": 1\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/schedule/1",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"schedule",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/schedule",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for PUT /api/schedule\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.hourBlockId).to.equal(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "next-auth.session-token=123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"hourBlockId\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/schedule/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"schedule",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/golinks/public",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for GET /api/golinks/public\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    for (value of jsonData) {\r",
							"        delete value.createdAt;\r",
							"        delete value.updatedAt;\r",
							"    }\r",
							"    pm.expect(jsonData).to.eql([{ \"id\": 1, \"golink\": \"sse\", \"url\": \"sse.rit.edu\", \"description\": \"SSE Website\", \"isPublic\": true, \"isPinned\": true }, { \"id\": 2, \"golink\": \"google\", \"url\": \"google.com\", \"description\": \"An underground and unknown search engine\", \"isPublic\": true, \"isPinned\": true }, { \"id\": 3, \"golink\": \"youtube\", \"url\": \"youtube.com\", \"description\": \"A small video sharing website\", \"isPublic\": true, \"isPinned\": true }]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:3000/api/golinks/public",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"golinks",
						"public"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/golinks/officer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for GET /api/golinks/officer\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql([]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer 123",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:3000/api/golinks/officer",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"golinks",
						"officer"
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/golinks/",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response for PUT /api/golinks\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.url).to.equal(\"https://duckduckgo.com\");\r",
							"    pm.expect(jsonData.golink).to.equal(\"duck-duck-go\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "next-auth.session-token=123",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"url\": \"https://duckduckgo.com\",\r\n    \"golink\": \"duck-duck-go\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:3000/api/golinks/",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"golinks",
						""
					]
				}
			},
			"response": []
		}
	]
}